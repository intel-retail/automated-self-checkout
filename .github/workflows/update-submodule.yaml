name: Update Submodule
on:
  repository_dispatch:
    types: [dispatch-event]
permissions:
  contents: read

env:
  BRANCH_NAME: perf-tool-${{ github.run_number }}
  PR_REVIEWERS: "sumanaga,avinash-palleti"  # Replace with actual GitHub usernames
jobs:
  update-submodule:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          token: ${{ secrets.SSO_TOKEN }}
          submodules: recursive
      - name: Authorize Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git checkout -b $BRANCH_NAME
      - name: Update submodule
        run: |
          git submodule update  --init --recursive --remote -f
        env:
          GITHUB_TOKEN: ${{ secrets.SSO_TOKEN }}
      - name: Commit changes
        run: | 
          git add -A
          git commit -m "Update submodule to latest commit"
          git push origin $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.SSO_TOKEN }}
      - name: Create PR
        run: | 
          PR_RESPONSE=$(curl -s -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/intel-retail/automated-self-checkout/pulls \
            -d "{\"title\":\"Performance Tools Submodule Update\",\"body\":\"Please review and approve the automated PR!\",\"head\":\"$BRANCH_NAME\",\"base\":\"main\"}")
          
          # Check if PR was created successfully
          if echo "$PR_RESPONSE" | jq -e '.number' > /dev/null; then
            PR_NUMBER=$(echo "$PR_RESPONSE" | jq -r '.number')
            PR_URL=$(echo "$PR_RESPONSE" | jq -r '.html_url')
            echo "✅ PR #$PR_NUMBER created successfully: $PR_URL"
            echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
            echo "PR_URL=$PR_URL" >> $GITHUB_ENV
          else
            echo "❌ Failed to create PR"
            echo "Response: $PR_RESPONSE"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.SSO_TOKEN }}
      - name: Add Reviewers to PR
        run: |
          # Convert comma-separated reviewers to JSON array
          IFS=',' read -ra REVIEWER_ARRAY <<< "$PR_REVIEWERS"
          REVIEWERS_JSON=$(printf '%s\n' "${REVIEWER_ARRAY[@]}" | jq -R . | jq -s .)
          
          # Add reviewers to the PR
          REVIEWER_RESPONSE=$(curl -s -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/intel-retail/automated-self-checkout/pulls/$PR_NUMBER/requested_reviewers \
            -d "{\"reviewers\":$REVIEWERS_JSON}")
          
          # Check if reviewers were added successfully
          if echo "$REVIEWER_RESPONSE" | jq -e '.requested_reviewers' > /dev/null; then
            ADDED_REVIEWERS=$(echo "$REVIEWER_RESPONSE" | jq -r '.requested_reviewers[].login' | tr '\n' ',' | sed 's/,$//')
            echo "✅ Reviewers added successfully:"
            [ -n "$ADDED_REVIEWERS" ] && echo "   Individual reviewers: $ADDED_REVIEWERS"
          else
            echo "⚠️ Failed to add reviewers (PR still created)"
            echo "Response: $REVIEWER_RESPONSE"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.SSO_TOKEN }}
