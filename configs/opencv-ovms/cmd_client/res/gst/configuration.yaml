OvmsSingleContainer: false
OvmsServer:
  ServerDockerScript: start_ovms_server.sh
  ServerDockerImage: openvino/model_server:2023.1-gpu
  ServerContainerName: ovms-server
  ServerConfig: "/models/config.json"
  StartupMessage: Starting OVMS server
  InitWaitTime: 2s
  EnvironmentVariableFiles:
    - ovms_server.env
  # StartUpPolicy:
  # when there is an error on launching ovms server startup, choose one of these values for the behavior of profile-launcher: 
  #   remove-and-restart: it will remove the existing container with the same container name if any and then restart the container
  #   exit: it will exit the profile-launcher and 
  #   ignore: it will ignore the error and continue (this is the default value if not given or none of the above)
  StartUpPolicy: ignore
OvmsClient:
  DockerLauncher:
    Script: docker-launcher.sh
    DockerImage: dlstreamer:dev
    ContainerName: gst
    Volumes:
      - "$cl_cache_dir:/home/pipeline-server/.cl-cache"
      - /tmp/.X11-unix:/tmp/.X11-unix
      - "$RUN_PATH/sample-media/:/home/pipeline-server/vids"
      - "$RUN_PATH/configs/opencv-ovms/gst/extensions:/home/pipeline-server/extensions"
      - "$RUN_PATH/configs/opencv-ovms/gst/framework-pipelines:/home/pipeline-server/framework-pipelines"
      - "$RUN_PATH/configs/opencv-ovms/models/2022:/home/pipeline-server/models"
      - "$RUN_PATH/results:/tmp/results"
      - "$RUN_PATH/scripts:/home/pipeline-server/scripts"
      - "$RUN_PATH/envs:/home/pipeline-server/envs"
  PipelineScript: /home/pipeline-server/scripts/run_gst.sh
  PipelineInputArgs: "" # space delimited like we run the script in command and take those input arguments
  EnvironmentVariableFiles:
    - gst.env
